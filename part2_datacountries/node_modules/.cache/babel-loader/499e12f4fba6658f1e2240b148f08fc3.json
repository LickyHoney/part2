{"ast":null,"code":"import _slicedToArray from \"/Users/honey/Desktop/data for countries /node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/honey/Desktop/data for countries /src/components/src/App.js\";\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios'; //4fea44ca1f2e1741f52a446840ce8cbb api key\n\nconst DisplayCountry = ({\n  country\n}) => {\n  const _useState = useState(\"\"),\n        _useState2 = _slicedToArray(_useState, 2),\n        newCountry = _useState2[0],\n        setCountry = _useState2[1];\n\n  const _useState3 = useState(\"show\"),\n        _useState4 = _slicedToArray(_useState3, 2),\n        newHide = _useState4[0],\n        setHide = _useState4[1];\n\n  const onClickHandler = () => {\n    if (newHide === \"show\") {\n      setHide(\"hide\");\n      setCountry(React.createElement(DisplaySingleCountry, {\n        country: country,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 14\n        },\n        __self: this\n      }));\n    } else {\n      setHide(\"show\");\n      setCountry(\"\");\n    }\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, country.name, React.createElement(\"button\", {\n    onClick: onClickHandler,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, newHide), newCountry);\n};\n\nconst DisplayWeather = ({\n  cityWeather,\n  cityName\n}) => {\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, \"Weather in \", cityName), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, React.createElement(\"strong\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, \"temperature: \"), cityWeather.main.temp, \" Fahrenheit\"), React.createElement(\"img\", {\n    src: \"http://openweathermap.org/img/wn/\".concat(cityWeather.weather[0].icon, \"@2x.png\"),\n    alt: \"weather icon\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, React.createElement(\"strong\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, \"Wind:\"), \" \", cityWeather.wind.speed, \" km/h \"));\n};\n\nconst DisplaySingleCountry = ({\n  country\n}) => {\n  const _useState5 = useState(\"\"),\n        _useState6 = _slicedToArray(_useState5, 2),\n        newWeather = _useState6[0],\n        setWeather = _useState6[1];\n\n  const _useState7 = useState(\"Show weather\"),\n        _useState8 = _slicedToArray(_useState7, 2),\n        weatherStatus = _useState8[0],\n        setWeatherStatus = _useState8[1];\n\n  const capital = country.capital;\n  const currency = country.currency;\n\n  const onClickWeather = () => {\n    if (weatherStatus === \"Show weather\") {\n      setWeatherStatus(\"Hide weather\");\n      axios.get(\"https://api.openweathermap.org/data/2.5/weather?q=\".concat(capital, \"&appid=4fea44ca1f2e1741f52a446840ce8cbb\")).then(response => setWeather(React.createElement(DisplayWeather, {\n        cityName: capital,\n        cityWeather: response.data,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      })));\n    } else {\n      setWeatherStatus(\"Show weather\");\n      setWeather(\"\");\n    }\n  };\n\n  const languages = country.languages.map(language => React.createElement(\"li\", {\n    key: language.name,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, language.name));\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, country.name), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, \"Capital: \", React.createElement(\"strong\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, capital)), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, \"Currency:\", React.createElement(\"strong\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, currency)), React.createElement(\"button\", {\n    onClick: onClickWeather,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, weatherStatus), newWeather, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, \"languages\"), React.createElement(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, languages), React.createElement(\"img\", {\n    src: country.flag,\n    alt: \"flag\",\n    width: \"200 px\",\n    height: \"200 px\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }));\n};\n\nconst DisplayCountries = ({\n  countries,\n  regVal\n}) => {\n  const regExp = new RegExp(regVal, \"i\");\n  const filteredCountries = countries.filter(country => regExp.test(country.name));\n\n  if (filteredCountries.length === 1) {\n    return React.createElement(DisplaySingleCountry, {\n      country: filteredCountries[0],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    });\n  } else if (filteredCountries.length > 10) {\n    return React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, \"Too many matches, specify another filter\");\n  } else {\n    const allCountries = filteredCountries.map(country => React.createElement(DisplayCountry, {\n      key: country.name,\n      country: country,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }));\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, allCountries);\n  }\n};\n\nconst App = () => {\n  const _useState9 = useState([]),\n        _useState10 = _slicedToArray(_useState9, 2),\n        newCountries = _useState10[0],\n        setCountries = _useState10[1];\n\n  const _useState11 = useState(''),\n        _useState12 = _slicedToArray(_useState11, 2),\n        newCountry = _useState12[0],\n        setCountry = _useState12[1];\n\n  const changeHandlerName = event => {\n    setCountry(event.target.value);\n  };\n\n  useEffect(() => {\n    axios.get(\"https://restcountries.eu/rest/v2/all\").then(response => {\n      setCountries(response.data);\n    });\n  }, []);\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    },\n    __self: this\n  }, \"find countries:\", React.createElement(\"input\", {\n    onChange: changeHandlerName,\n    value: newCountry,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122\n    },\n    __self: this\n  }), React.createElement(DisplayCountries, {\n    countries: newCountries,\n    regVal: newCountry,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126\n    },\n    __self: this\n  }));\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/honey/Desktop/data for countries /src/components/src/App.js"],"names":["React","useState","useEffect","axios","DisplayCountry","country","newCountry","setCountry","newHide","setHide","onClickHandler","name","DisplayWeather","cityWeather","cityName","main","temp","weather","icon","wind","speed","DisplaySingleCountry","newWeather","setWeather","weatherStatus","setWeatherStatus","capital","currency","onClickWeather","get","then","response","data","languages","map","language","flag","DisplayCountries","countries","regVal","regExp","RegExp","filteredCountries","filter","test","length","allCountries","App","newCountries","setCountries","changeHandlerName","event","target","value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\r\n\r\nimport axios from 'axios'\r\n\r\n//4fea44ca1f2e1741f52a446840ce8cbb api key\r\n\r\nconst DisplayCountry = ({ country }) =>{\r\n  const [ newCountry, setCountry ] = useState(\"\")\r\n  const [ newHide, setHide] = useState(\"show\")\r\n\r\n  const onClickHandler = () =>{\r\n    if(newHide === \"show\"){\r\n      setHide(\"hide\")\r\n      setCountry(<DisplaySingleCountry country={country} />)\r\n    }else{\r\n      setHide(\"show\")\r\n      setCountry(\"\")\r\n    }\r\n    \r\n  }\r\n\r\n  return(\r\n    <div>\r\n      {country.name}\r\n      <button onClick={onClickHandler} >{newHide}</button>\r\n      {newCountry}\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\n\r\n  \r\n\r\nconst DisplayWeather = ({ cityWeather, cityName }) =>{\r\n  return(\r\n    <div>\r\n      <h2>Weather in {cityName}</h2>\r\n      <p><strong>temperature: </strong>{cityWeather.main.temp} Fahrenheit</p>\r\n      <img src={`http://openweathermap.org/img/wn/${cityWeather.weather[0].icon}@2x.png`} alt={\"weather icon\"} ></img>\r\n      <p><strong>Wind:</strong> {cityWeather.wind.speed} km/h </p>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst DisplaySingleCountry = ({ country }) =>{\r\n  const [ newWeather, setWeather] = useState(\"\")\r\n  const [ weatherStatus, setWeatherStatus ] = useState(\"Show weather\")\r\n  const capital = country.capital\r\n  const currency = country.currency\r\n\r\n  const onClickWeather = () =>{\r\n    if(weatherStatus === \"Show weather\"){\r\n      setWeatherStatus(\"Hide weather\")\r\n      axios\r\n        .get(`https://api.openweathermap.org/data/2.5/weather?q=${capital}&appid=4fea44ca1f2e1741f52a446840ce8cbb`)\r\n        .then(response=> setWeather(<DisplayWeather cityName={capital} cityWeather={response.data} />))\r\n    }else{\r\n      setWeatherStatus(\"Show weather\")\r\n      setWeather(\"\")\r\n    }\r\n     \r\n  }\r\n\r\n  const languages = country.languages.map(language => <li key={language.name}>{language.name}</li>)\r\n\r\n  return(\r\n    <div>\r\n      <h2>{country.name}</h2>\r\n      <p>Capital: <strong>{capital}</strong></p>\r\n      <p>Currency:<strong>{currency}</strong></p>\r\n      <button onClick={onClickWeather} >{weatherStatus}</button>\r\n      {newWeather}\r\n      <h2>languages</h2>\r\n      <ul>{languages}</ul>\r\n      <img src={country.flag} alt={\"flag\"} width={\"200 px\"} height={\"200 px\"}></img>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst DisplayCountries = ({ countries, regVal }) =>{\r\n  const regExp = new RegExp(regVal, \"i\")\r\n  const filteredCountries = countries.filter(country => regExp.test(country.name))\r\n  if(filteredCountries.length === 1){\r\n    return(\r\n      <DisplaySingleCountry country={filteredCountries[0]}  />\r\n    )\r\n  }else if (filteredCountries.length > 10){\r\n    return(\r\n      <p>\r\n        Too many matches, specify another filter\r\n      </p>\r\n    )\r\n  }else{\r\n    const allCountries = filteredCountries.map(country => <DisplayCountry key={country.name} country={country} />)\r\n    return(\r\n      <div>\r\n        {allCountries}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst App = () => {\r\n  const [ newCountries, setCountries] = useState([])\r\n  const [ newCountry, setCountry ] = useState('')\r\n  \r\n  const changeHandlerName = (event) => {\r\n    setCountry(event.target.value)\r\n  }\r\n\r\n  useEffect(()=>{\r\n    axios.get(`https://restcountries.eu/rest/v2/all`)\r\n    .then(response =>{\r\n      setCountries(response.data)\r\n    })\r\n  },[])\r\n\r\n  return (\r\n    <div>\r\n      find countries: \r\n      <input \r\n      onChange = {changeHandlerName}\r\n      value = {newCountry}\r\n     />\r\n      <DisplayCountries countries={newCountries} regVal={newCountry}  />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App"]},"metadata":{},"sourceType":"module"}